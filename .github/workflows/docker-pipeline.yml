name: Docker Build, Push, Test, and Deploy to Render

on:
  push:
    branches:
      - main

jobs:
  build-push-test-deploy:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Clonar el repositorio
    - name: Checkout repository
      uses: actions/checkout@v2

    # Paso 2: Iniciar sesi√≥n en Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    # Paso 3: Construir y subir la imagen de Docker
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ernestoazasan/echoes-of-shadows-web:latest

    # Paso 4: Ejecutar pruebas
    - name: Run tests
      run: |
        docker run -d -p 80:80 --name echoes-of-shadows-web ernestoazasan/echoes-of-shadows-web:latest
        sleep 10
        docker exec echoes-of-shadows-web /bin/sh -c "curl -I http://localhost:80 || exit 1"
        docker exec echoes-of-shadows-web /bin/sh -c "test -f /usr/share/nginx/html/index.html && echo 'index.html encontrado.' || (echo 'index.html NO encontrado.' && exit 1)"
        docker stop echoes-of-shadows-web
        docker rm echoes-of-shadows-web

    # Paso 5: Desplegar en Render
    - name: Trigger Render deployment
      run: |
        SERVICE_ID="srv-cv3kcd5svqrc73fnsih0"
        echo "Triggering deployment for service ID: $SERVICE_ID"
        response=$(curl -s -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Accept: application/json" \
          "https://api.render.com/v1/services/$SERVICE_ID/deploys")
        echo "Response from Render API: $response"